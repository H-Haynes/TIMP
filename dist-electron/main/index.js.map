{"version":3,"file":"index.js","sources":["../../electron/main/index.ts"],"sourcesContent":["import { app, BrowserWindow, shell, ipcMain, screen, globalShortcut } from 'electron';\nimport { release } from 'node:os';\nimport { join } from 'node:path';\n\n\n\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.js    > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.DIST_ELECTRON = join(__dirname, '..');\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist');\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST;\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith('6.1')) app.disableHardwareAcceleration();\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit();\n  process.exit(0);\n}\n\n// Remove electron security warnings\n// This warning only shows in development mode\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\n\nlet win: BrowserWindow | null = null;\nlet lyricWindow: null | BrowserWindow = null\n\n// Here, you can also use other preload\nconst preload = join(__dirname, '../preload/index.js');\nconst url = process.env.VITE_DEV_SERVER_URL;\nconst indexHtml = join(process.env.DIST, 'index.html');\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: 'Main window',\n    icon: join(process.env.PUBLIC, 'favicon.ico'),\n    webPreferences: {\n      preload,\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n      // Consider using contextBridge.exposeInMainWorld\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n      nodeIntegration: true,\n      contextIsolation: true,\n    },\n    minWidth: 900,\n    // frame:false,//无边框窗口\n    // titleBarStyle: 'hidden' // 隐藏标题栏\n  });\n\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    // electron-vite-vue#298\n    win.loadURL(url);\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools();\n  } else {\n    win.loadFile(indexHtml);\n  }\n\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString());\n  });\n\n  // Make all links open with the browser, not with the application\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    if (url.startsWith('https:')) shell.openExternal(url);\n    return { action: 'deny' };\n  });\n\n  if (import.meta.env.DEV) {\n    import('electron-devtools-installer').then(({ default: installExtension, VUEJS3_DEVTOOLS }) => {\n      installExtension(VUEJS3_DEVTOOLS, {\n        loadExtensionOptions: {\n          allowFileAccess: true,\n        },\n      })\n    })\n      .then(() => console.log('---------Vue调试工具已加载------------'))\n      .catch(e => console.error('Failed install extension:', e));\n  }\n\n  // 主窗口销毁时，同时销毁子窗口\n  win.on('closed', () => {\n    // 销毁歌词窗口\n    console.log('销毁 2')\n\n    lyricWindow && lyricWindow.destroy();\n    lyricWindow = null;\n  });\n}\n\napp.whenReady().then(createWindow);\n\napp.on('window-all-closed', () => {\n  win = null;\n  if (process.platform !== 'darwin') app.quit();\n});\n\napp.on('second-instance', () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore();\n    win.focus();\n  }\n});\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    // allWindows[0].focus();\n    // 显示时，让主窗口显示并聚焦\n    win.show()\n    win.focus()\n  } else {\n    createWindow();\n  }\n});\n\n\n\nconst openLyric = () => {\n  if (lyricWindow) {\n    // 存在歌词窗口，显示即可\n    lyricWindow.show()\n    return\n  }\n\n  // 不存在，创建窗口\n  lyricWindow = new BrowserWindow({\n    width: 800,\n    height: 100,\n    // parent: win,\n    transparent: true, // 透明窗口\n    // transparent: false, // 透明窗口\n\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: true,\n    },\n    x: (screen.getPrimaryDisplay().workArea.width - 800) / 2,\n    y: screen.getPrimaryDisplay().workArea.height - 100,\n    frame: false,\n    backgroundColor: '#00000000',\n    alwaysOnTop: true, // 设置为总是置顶\n  })\n\n  // 设置窗口忽略鼠标事件\n  // lyricWindow.setIgnoreMouseEvents(true);\n\n  win.show(); // 不让焦点自动聚焦到子窗口\n  if (process.env.VITE_DEV_SERVER_URL) {\n    lyricWindow.loadURL(`${url}#/lyric`);\n    console.log('here', `${url}#/lyric`)\n  } else {\n    lyricWindow.loadFile(indexHtml, { hash: '#/lyric' });\n  }\n\n  // 销毁歌词窗口\n  lyricWindow.on('close', () => {\n    console.log('销毁 1')\n    lyricWindow && lyricWindow.destroy()\n    lyricWindow = null\n  })\n\n}\n\n// New window example arg: new windows url\n// ipcMain.handle('open-win', (_, arg) => {\n//   const childWindow = new BrowserWindow({\n//     webPreferences: {\n//       preload,\n//       nodeIntegration: true,\n//       contextIsolation: false,\n//     },\n//   });\n\n//   if (process.env.VITE_DEV_SERVER_URL) {\n//     childWindow.loadURL(`${url}#${arg}`);\n//   } else {\n//     childWindow.loadFile(indexHtml, { hash: arg });\n//   }\n// });\n\n// 打开歌词窗口\nipcMain.on('openLyric', openLyric)\n// 关闭歌词窗口\nipcMain.on('closeLyric', () => {\n  lyricWindow && lyricWindow.hide()\n})\n\n// 歌词更新\nipcMain.on('lyric', (_, lyric: string) => {\n  // 监听到歌词信息变更，通过事件传入子窗口\n  console.log(lyric)\n  lyricWindow && lyricWindow.webContents.send('lyric', lyric)\n})\n\nipcMain.on('fixed', () => {\n  lyricWindow && lyricWindow.setAlwaysOnTop(true);\n  lyricWindow && lyricWindow.setMovable(false);\n})\n\nipcMain.on('unfixed', () => {\n  lyricWindow && lyricWindow.setAlwaysOnTop(false);\n  lyricWindow && lyricWindow.setMovable(true);\n});\n\n\n"],"names":["join","release","app","BrowserWindow","url","shell","screen","ipcMain"],"mappings":"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"}